### Some basics linux commands:-

=> ls (this command will list files of present working directory).
   Use flag -a for listing hidden files, -l for seeing permissions and -R for listing items inside the directory
   of directory. ie. ls -alR.
=> touch "filename.extension" (for creating a file in working directory.) 
=> mkdir "directory\name"  (for creating an empty directory in working directory.) 
=> rmdir "directory\name"  (for deleting an empty directory)
=> rm -r "directory\name" or "filename.extension" (for deleting directory or files)
   NOTE: Use rm -rf "directory\name" for deleting non empty directory. -f flag is used for force delete.
=> chmod "xyz" "filename" (for changing permissions of a file or directory) 
   ie. chmod 777 filename.extension or chmod u+x directory\name.
=> sudo su	(for changing normal user mode to root user i.e superuser.)
=> cd /directory (for changing directory) and cd .. (for moving to previous directory)
   Use cd ~ (for changing directory to home directory), cd /(for changing into root)
   cd - (for changing to last directory)
=> clear,history,exit	(for clearing, listing previously used commands and closing the teminal.)
=> du -hs /full/directory/path (for fetching size of a directory.)
   NOTE: Very useful when piped with pwd command. eg. pwd | du -hs .
=> fdisk -l (for disk partition list.) Use fdisk --help for more information.
=> lsblk -f (for disk partion and filesystem related information) Use lsblk --help for more information.
=> cat "filename" or less "filename" (for displaying file content on terminal)
=> cat "filename1" > "filename2" (for overwriting content of filename1 to filename2)
   NOTE: this action will delete the earlier content of filename2.
   cat filename1>>filename2  
   (this will copy the content of filename1 to filename2 without deleting the content of filename2)
=> Similarly, tac filename1 > filename2 and tac filename1 >> filename2 for flipping one file into another.
   NOTE: Very useful if you want to save your commands from history.
=> mv "old_filename" "new_filename"  (for renaming a file or directory.) use flags -i -v for more information.
=> cp "old_filename" "new_filename"  (for copying files content of new_filename to a new new file named old_filename)
=> whoami (for printing username on terminal)
=> whereis "package\name" (will print the path of package on terminal)
=> package --version (will show you the version of the package)
=> htop or btop (for system monitoring)
=> neofetch  				(for fetching system information, if not working install neofetch.)
   NOTE: You have to install the packages manually on your system.
=> vim "filename.extension" (for opening a file in vim editor)
   :q! (for exiting vim without making any changes to the file)
   :wq (for coming out of vim after making changes to the file)
   / or ? (for searching in vim editor)
   vimtutor (for learning how to use vim editor)
=> command >> filename.txt (for storing output of a command into filename.txt file)
=> cat $SHELL (gives path of the SHELL)
=> alias shortCommand="longCommand" (for making custom commands)
=> command1 | command2 (will take output of command1 as input of command2)
   ie. ls | wc -l (this type of operation is known as piping)
=> wc (for counting no. of words,lines,character and etc in a file)
   Use different flags ie. wc -l, wc -c, etc for more information check wc --help
   NOTE: Very useful when used with piping. eg. cat gitCommands.txt | grep git | wc .
